worker_processes 4;

events {
    worker_connections 1024;
}

http {
    upstream proxyhost {
        server localhost:81;
    }

    proxy_temp_path   /var/lib/nginx/tmp;
    proxy_cache_path  /var/lib/nginx/cache  levels=1:2   keys_zone=saigon:500m max_size=5g;
    proxy_cache_valid 200 302 5m;
    proxy_cache_valid 404 1m;
    server_tokens off;

    server {
        listen 127.0.0.1;
        server_name localhost;
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }

    server {
        listen 80;
        rewrite ^ https://$host$request_uri? permanent;
    }

    server {
        listen 443;
        ssl on;
        ssl_certificate /etc/nginx/ssl/saigon.crt;
        ssl_certificate_key /etc/nginx/ssl/saigon.key;
        ssl_protocols SSLv2 SSLv3 TLSv1;
        proxy_set_header X-Forwarded-Proto 'https';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_cache saigon;
        proxy_cache_methods POST;
        proxy_cache_key $request_uri;

        if ($uri ~ ^/$) {
            # Force our users to our saigon setup
            rewrite ^ https://$host/sapi/ permanent;
        }

        location /api/getNagiosCfg {
            # Don't cache nagios config lookups, every call should hit the data store 
            proxy_cache off;
            expires off;
            proxy_pass http://proxyhost;
        }

        location /sapi {
            # Don't cache sapi yet, this needs to be worked out since
            #   v1 API is still in heavy usage
            proxy_cache off;
            expires off;
            proxy_pass http://proxyhost;
        }

        location / {
            # Lucky you, you get to pass go
            proxy_pass http://proxyhost;
        }
    }
}
